/* ***************************************************************** */
/* File name:        es670_peripheral_board.h                        */
/* File description: Header file containing the peripherals mapping  */
/*                     of the peripheral board for the ES670 hardware*/
/* Author name:      dloubach                                        */
/* Creation date:    16out2015                                       */
/* Revision date:    20jun2018 by fcpinheiro,lopfrigerio             */
/* ***************************************************************** */

#ifndef SOURCES_ES670_PERIPHERAL_BOARD_H_
#define SOURCES_ES670_PERIPHERAL_BOARD_H_

/* system includes */
#include <MKL25Z4.h>

/*                 General uC definitions                 */

/* Clock gate control */
#define CGC_CLOCK_DISABLED          0x00U
#define CGC_CLOCK_ENABLED           0x01U

/* GPIO input / output */
#define GPIO_INPUT                  0x00U
#define GPIO_OUTPUT                 0x01U

#define ALT0                        0x00u
#define ALT1                        0X01U
#define ALT3                        0X03U
#define ALT4                        0X04U
#define FTM_CLKIN0                  ALT4


/*                 END OF General uC definitions         */

/*                 Fan definitions              */

#define FAN_PORT_BASE_PNT           PORTA
#define FAN_GPIO_BASE_PNT           PTA

#define FAN_PIN                     13U
#define FAN_GPIO_ALT                ALT1
#define FAN_PWM_ALT                 ALT3
#define FAN_DIR                     (GPIO_OUTPUT << FAN_PIN)

/*                 END OF Fan definitions              */

/*                 Heater definitions                  */

#define HEATER_PORT_BASE_PNT           PORTA
#define HEATER_GPIO_BASE_PNT           PTA

#define HEATER_PIN                     12U
#define HEATER_PWM_ALT                 ALT3
#define HEATER_DIR                     (GPIO_OUTPUT << HEATER_PIN)

/*                 END OF Heater definitions            */

/*                 Temperature sensor definitions       */
#define TEMPSENSOR_PORT_BASE_PNT       PORTE

#define TEMPSENSOR_PIN                 21U
#define VOLTSENSOR_PIN                 20U
#define TEMPSENSOR_ADC_ALT             ALT0
#define VOLTSENSOR_ADC_ALT             ALT0

/* ADC Definitions */
#define ADC_CFG1_ADICLK_BUS		       0u
#define ADC_CFG1_ADICLK_BUS2		   1u
#define ADC_CFG1_MODE_8BIT             0u
#define ADC_CFG1_ADLSMP_SHORT          0u
#define ADC_CFG1_ADIV_1                0u
#define ADC_CFG1_ADLPC_NORMAL          0u

#define ADC_SC2_REFSEL_EXT             0u
#define ADC_SC2_DMAEN_DISABLE          0u
#define ADC_SC2_ACFE_DISABLE           0u
#define ADC_SC2_ADTRG_SOFT             0u
#define ADC_SC2_ADACT_INPROGRESS       1u
#define ADC_SC2_ADACT_NOTINPROGRESS    0u

#define ADC_CFG2_ADLSTS_DEFAULT        0U
#define ADC_CFG2_ADHSC_NORMAL          0u
#define ADC_CFG2_ADACKEN_DISABLE       0u
#define ADC_CFG2_MUXSEL_ACHS           0u

#define ADC_SC1_DIFF_SINGLEENDED       0u
#define ADC_SC1_AIEN_DISABLE           0U
#define ADC_SC1_ADCH_AD4               4u
#define ADC_SC1_COCO_COMPLETE          1u

/*                 TPM definitions                     */

#define TPM_SC_PS_1                     0u
#define TPM_SC_CMOD_RSNGEDGE            2u
#define TPM_SC_CMOD_EVRCNTCLK           1u
#define TPM_SC_CPWMS_UPCNT              0u
#define TPM_CNSC_MSB_PWM                1u
#define TPM_CNSC_MSA_PWM                0u
#define TPM_CNSC_ELSB_PWM               1u
#define TPM_CNSC_ELSA_PWM               0u
#define SIM_SOPT2_TPMSRC_OSCERCCLK      2u
#define SIM_SOPT2_CLKOUTSEL_OSCERCCLK   6u
#define SIM_SOPT4_TPMCLKSEL_TPM_CLKIN0  0u

/* definitions for input capture mode*/
#define TPM_SC_CPWMS_INPUT_CAPTURE      0u
#define TPM_CnSC_MSA_INPUT_CAPTURE      0u
#define TPM_CnSC_MSB_INPUT_CAPTURE      0u
#define TPM_CnSC_ELSA_INPUT_CAPTURE     1u
#define TPM_CnSC_ELSB_INPUT_CAPTURE     1u

/*                 END OF TPM0 definitions             */

/*                 Tacometer definitions               */

#define TACOMETER_PORT_BASE_PNT     PORTE
#define TACOMETER_GPIO_BASE_PNT     PTE

#define TACOMETER_PIN               29U
#define TACOMETER_ALT               FTM_CLKIN0
#define TACOMETER_DIR               GPIO_INPUT

#define TACOMETER_TPM_BASE			TPM0

/*                 END OF Tacometer definitions       */

/*                 LCD definitions                    */

/* LCD Register Selector
 * Used as register selector input
 * When (LCD_RS = LCD_RS_HIGH) => DATA register is selected
 * When (LCD_RS = LCD_RS_LOW)  => INSTRUCTION register is selected
*/
#define LCD_PORT_BASE_PNT           PORTC                                   /* peripheral port base pointer */
#define LCD_GPIO_BASE_PNT           PTC                                     /* peripheral gpio base pointer */

#define LCD_RS_PIN                  8U                                      /* register selector */
#define LCD_RS_DIR                  (GPIO_OUTPUT << LCD_RS_PIN)
#define LCD_RS_ALT                  0x01u

#define LCD_ENABLE_PIN              9U                                      /* enable pin */
#define LCD_ENABLE_DIR              (GPIO_OUTPUT << LCD_ENABLE_PIN)
#define LCD_ENABLE_ALT              0x01u

#define LCD_RS_HIGH                 1U
#define LCD_RS_DATA                 LCD_RS_HIGH

#define LCD_RS_LOW                  0U
#define LCD_RS_CMD                  LCD_RS_LOW

#define LCD_ENABLED                 1U
#define LCD_DISABLED                0U

#define LCD_DATA_DIR                GPIO_OUTPUT                             /* LCD data pins */
#define LCD_DATA_ALT                0x01u

#define LCD_DATA_DB0_PIN            0U
#define LCD_DATA_DB0_DIR            (GPIO_OUTPUT << LCD_DATA_DB0_PIN)

#define LCD_DATA_DB1_PIN            1u
#define LCD_DATA_DB1_DIR            (GPIO_OUTPUT << LCD_DATA_DB1_PIN)

#define LCD_DATA_DB2_PIN            2u
#define LCD_DATA_DB2_DIR            (GPIO_OUTPUT << LCD_DATA_DB2_PIN)

#define LCD_DATA_DB3_PIN            3U
#define LCD_DATA_DB3_DIR            (GPIO_OUTPUT << LCD_DATA_DB3_PIN)

#define LCD_DATA_DB4_PIN            4U
#define LCD_DATA_DB4_DIR            (GPIO_OUTPUT << LCD_DATA_DB4_PIN)

#define LCD_DATA_DB5_PIN            5U
#define LCD_DATA_DB5_DIR            (GPIO_OUTPUT << LCD_DATA_DB5_PIN)

#define LCD_DATA_DB6_PIN            6U
#define LCD_DATA_DB6_DIR            (GPIO_OUTPUT << LCD_DATA_DB6_PIN)

#define LCD_DATA_DB7_PIN            7U
#define LCD_DATA_DB7_DIR            (GPIO_OUTPUT << LCD_DATA_DB7_PIN)
/*                 END OF LCD definitions                 */


/*                 DISPLAY7SEG Definitions                    */
#define DISPLAY7SEG_PORT_BASE_PNT   PORTC                                   /* peripheral port base pointer */
#define DISPLAY7SEG_GPIO_BASE_PNT   PTC                                     /* peripheral gpio base pointer */

#define DISPLAY7SEG_ALT             0x01u

#define DISPLAY7SEG_SEGA            0U                                      /* display A segment pin */
#define DISPLAY7SEG_SEGA_DIR        (GPIO_OUTPUT << DISPLAY7SEG_SEGA)

#define DISPLAY7SEG_SEGB            1U                                      /* display B segment pin */
#define DISPLAY7SEG_SEGB_DIR        (GPIO_OUTPUT << DISPLAY7SEG_SEGB)

#define DISPLAY7SEG_SEGC            2U                                      /* display C segment pin */
#define DISPLAY7SEG_SEGC_DIR        (GPIO_OUTPUT << DISPLAY7SEG_SEGC)

#define DISPLAY7SEG_SEGD            3U                                      /* display D segment pin */
#define DISPLAY7SEG_SEGD_DIR        (GPIO_OUTPUT << DISPLAY7SEG_SEGD)

#define DISPLAY7SEG_SEGE            4U                                      /* display E segment pin */
#define DISPLAY7SEG_SEGE_DIR        (GPIO_OUTPUT << DISPLAY7SEG_SEGE)

#define DISPLAY7SEG_SEGF            5U                                      /* display F segment pin */
#define DISPLAY7SEG_SEGF_DIR        (GPIO_OUTPUT << DISPLAY7SEG_SEGF)

#define DISPLAY7SEG_SEGG            6U                                      /* display G segment pin */
#define DISPLAY7SEG_SEGG_DIR        (GPIO_OUTPUT << DISPLAY7SEG_SEGG)

#define DISPLAY7SEG_SEGDP           7U                                      /* display DP segment pin */
#define DISPLAY7SEG_SEGDP_DIR       (GPIO_OUTPUT << DISPLAY7SEG_SEGDP)

#define DISPLAY7SEG_D1              13U                                     /* display 1 selection pin */
#define DISPLAY7SEG_D1_DIR          (GPIO_OUTPUT << DISPLAY7SEG_D1)

#define DISPLAY7SEG_D2              12U                                     /* display 2 selection pin */
#define DISPLAY7SEG_D2_DIR          (GPIO_OUTPUT << DISPLAY7SEG_D2)

#define DISPLAY7SEG_D3              11U                                     /* display 3 selection pin */
#define DISPLAY7SEG_D3_DIR          (GPIO_OUTPUT << DISPLAY7SEG_D3)

#define DISPLAY7SEG_D4              10U                                     /* display 4 selection pin */
#define DISPLAY7SEG_D4_DIR          (GPIO_OUTPUT << DISPLAY7SEG_D4)



/*                 BUZZER Definitions                    */
#define BUZZER_PORT_BASE_PNT        PORTD                                   /* peripheral port base pointer */
#define BUZZER_GPIO_BASE_PNT        PTD                                     /* peripheral gpio base pointer */

#define BUZZER_PIN                  1U                                      /* buzzer pin */
#define BUZZER_DIR                  kGpioDigitalOutput
#define BUZZER_ALT                  0x01u
/*                 END OF BUZZER definitions             */


/*                 LED and SWITCH Definitions                    */
#define LS_PORT_BASE_PNT            PORTA                                   /* peripheral port base pointer */
#define LS_GPIO_BASE_PNT            PTA                                     /* peripheral gpio base pointer */

/* THIS PIN CONFLICTS WITH PTA1 USED AS UART0_RX IN THE OPENSDA SERIAL DEBUG PORT */
#define LS1_PIN                     1U                                      /* led/switch #1 pin */
#define LS1_DIR_OUTPUT              (GPIO_OUTPUT << LS1_PIN)
#define LS1_DIR_INPUT               (GPIO_OUTPUT << LS1_PIN)
#define LS1_ALT                     0x01u                                   /* GPIO alternative */

/* THIS PIN CONFLICTS WITH PTA2 USED AS UART0_TX IN THE OPENSDA SERIAL DEBUG PORT */
#define LS2_PIN                     2U                                      /* led/switch #2 pin */
#define LS2_DIR_OUTPUT              (GPIO_OUTPUT << LS2_PIN)
#define LS2_DIR_INPUT               (GPIO_OUTPUT << LS2_PIN)
#define LS2_ALT                     LS1_ALT

#define LS3_PIN                     4U                                      /* led/switch #3 pin */
#define LS3_DIR_OUTPUT              (GPIO_OUTPUT << LS3_PIN)
#define LS3_DIR_INPUT               (GPIO_OUTPUT << LS3_PIN)
#define LS3_ALT                     LS1_ALT

#define LS4_PIN                     5U                                      /* led/switch #4 pin */
#define LS4_DIR_OUTPUT              (GPIO_OUTPUT << LS4_PIN)
#define LS4_DIR_INPUT               (GPIO_OUTPUT << LS4_PIN)
#define LS4_ALT                     LS1_ALT

/*                 END OF LED and SWITCH definitions             */


#endif /* SOURCES_ES670_PERIPHERAL_BOARD_H_ */
