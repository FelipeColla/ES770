/* ***************************************************************** */
/* File name:        display7seg_hal.h                               */
/* File description: This file contains headers of functions for     */
/*                   control of 7 segments displays from peripheral  */
/*                   board                                           */
/* Author name:      fcpinheiro,lopfrigerio                          */
/* Creation date:    04apr2018                                       */
/* Revision date:    25apr2018                                       */
/* ***************************************************************** */
#ifndef SOURCES_ES670_DISPLAY7SEG_DISPLAY7SEG_HAL_H_
#define SOURCES_ES670_DISPLAY7SEG_DISPLAY7SEG_HAL_H_

#include "../KL25Z/es670_peripheral_board.h"

typedef enum segment_status_type_e
{ SEG_ON,   SEG_OFF} segment_status_type_e;
/* ************************************************ */
/* Method name:        display7seg_init             */
/* Method description: Initialize the 7seg displays */
/* Input params:       n/a                          */
/* Output params:      n/a                          */
/* ************************************************ */
void display7seg_init(void);


/* ************************************************** */
/* Method name:        display7seg_init_clearDisplay  */
/* Method description: set the display segments OFF   */
/* Input params:       n/a                            */
/* Output params:      n/a                            */
/* ************************************************** */
void display7seg_clearDisplay();

/* ************************************************** */
/* Method name:        display7seg_init_charDecode    */
/* Method description: decode the character to be     */
/*                     written into a ON and OFF      */
/*                     segment						  */
/* Input params:       cDisplayNum = which display    */
/*                     cDisplayMsg = character to be  */
/*                                   written          */
/* Output params:      segStatus = character decoded  */
/*                     to segment ports mapped as     */
/*                     binary vector in order:        */
/*                     a,b,c,d,e,f,g,dp               */
/* ************************************************** */
segment_status_type_e* display7seg_charDecode(char cDisplayMsg);

/* ************************************************** */
/* Method name:        display7seg_init_writeDisplay  */
/* Method description: write specified character OFF  */
/* Input params:       cDisplayNum = which display    */
/*                     cDisplayMsg = character to be  */
/*                                   written          */
/* Output params:      n/a                            */
/* ************************************************** */
void display7seg_writeDisplay(char cDisplayNum,char cDisplayMsg);

#endif /* SOURCES_ES670_DISPLAY7SEG_DISPLAY7SEG_HAL_H_ */
